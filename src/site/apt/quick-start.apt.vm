Quick Start Guide

 NOTE: You will need to make sure your Android SDK is up to date. Make sure you're using Revision 18 or higher.
 (To update your tools run the "android" command in your Android SDK and update the SDK from there.)

* Just Use Maven (recommended)

* Archetype with Roboguice

 Simple copy-paste the following command to get up-and-running with a template project using Roboguice and ActionBarSherlock.

+---
 mvn archetype:generate -DarchetypeGroupId=com.willowtreeapps -DarchetypeArtifactId=oak-archetype \
                        -DarchetypeVersion=${project.version} \
                        -DarchetypeRepository=${project.distributionManagement.snapshotRepository.url}
+---

 Run the following inside the newly created subdirectory.

+---

mvn clean install

+---

 Then, if you're using IntelliJ, you can just open the created pom.xml file via (File -> Open Project...)

* Archetype with Dagger (minSdk 10 with AppCompat)

 Like above, copy and paste the following command to get started with a project using Dagger and AppCompat. In order to use this archetype you must have the maven-android-sdk-deployer deploying the SDK to your repo.

+---
 mvn archetype:generate -DarchetypeGroupId=com.willowtreeapps -DarchetypeArtifactId=oak-dagger-archetype \
                        -DarchetypeVersion=${project.version} \
                        -DarchetypeRepository=${project.distributionManagement.snapshotRepository.url}
+---

 Run the following inside the newly created subdirectory.

+---

mvn clean install

+---

 Then, if you're using IntelliJ, you can just open the created pom.xml file via (File -> Open Project...)

* Archetype with Dagger (minSdk 15)

 Like above, copy and paste the following command to get started with a project using Dagger.

+---
 mvn archetype:generate -DarchetypeGroupId=com.willowtreeapps -DarchetypeArtifactId=oak-dagger-api15-archetype \
                        -DarchetypeVersion=${project.version} \
                        -DarchetypeRepository=${project.distributionManagement.snapshotRepository.url}
+---

 Run the following inside the newly created subdirectory.

+---

mvn clean install

+---

 Then, if you're using IntelliJ, you can just open the created pom.xml file via (File -> Open Project...)








